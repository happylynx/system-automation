# run using: $ ansible-playbook ./playbook.yml -K
---
# - hosts: hosts
- hosts: f25
  remote_user: root
  tasks:
  - include: includes/common/install-python-dnf-module.yml
  - include: includes/common/all.yml
  - include: includes/common/main-host.yml
# $ cat /etc/sysconfig/network-scripts/ifcfg-ens3
# DEVICE=ens3
# BRIDGE=ovirtmgmt
# ONBOOT=yes
# MTU=1500
# NM_CONTROLLED=no
# IPV6INIT=no
# $ cat /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
# DEVICE=ovirtmgmt
# TYPE=Bridge
# DELAY=0
# STP=off
# ONBOOT=yes
# BOOTPROTO=dhcp
# MTU=1500
# DEFROUTE=yes
# NM_CONTROLLED=no
  - stat: path=/etc/sysconfig/network-scripts/ifcfg-ens3
    register: ifcfg_ens3_stat
  - name: Fail if original network configuration file is missing
    fail:
      msg: File /etc/sysconfig/network-scripts/ifcfg-ens3 is expected but missing
    when: not ifcfg_ens3_stat.stat.exists
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      state: absent
      regexp: '^(?!(#|((DEVICE|BRIDGE|ONBOOT|MTU|NM_CONTROLLED|IPV6INIT)=)))'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^DEVICE='
      line: 'DEVICE=ens3'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^BRIDGE='
      line: 'BRIDGE=ovirtmgmt'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^ONBOOT='
      line: 'ONBOOT=yes'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^MTU='
      line: 'MTU=1500'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^NM_CONTROLLED='
      line: 'NM_CONTROLLED=no'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ens3
      regexp: '^IPV6INIT='
      line: 'IPV6INIT=no'
  - name: create ifcfg-ovirt-mgmt
    file:
      path: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      state: touch
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      state: absent
      regexp: '^(?!(#|((DEVICE|TYPE|DELAY|ONBOOT|BOOTPROTO|MTU|DEFROUTE|NM_CONTROLLED)=)))'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^DEVICE='
      line: 'DEVICE=ovirtmgmt'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^TYPE='
      line: 'TYPE=Bridge'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^DELAY='
      line: 'DELAY=0'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^STP='
      line: 'STP=off'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^ONBOOT='
      line: 'ONBOOT=yes'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^BOOTPROTO='
      line: 'BOOTPROTO=dhcp'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^MTU='
      line: 'MTU=1500'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^DEFROUTE='
      line: 'DEFROUTE=yes'
  - lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-ovirtmgmt
      regexp: '^DEFROUTE='
      line: 'NM_CONTROLLED=no'
  - name: disable network manager service
    systemd: enabled=no name=NetworkManager
  - name: enable network service
    systemd: enabled=yes name=network
  - name: stat of /etc/resolv.conf
    stat: path=/etc/resolv.conf
    register: resolv_conf_stat
  - when: resolv_conf_stat.stat.islnk
#    name: Fix of /etc/resolv.conf being a symlink to some network manager file
    block:
      - name: remove /etc/resolv.conf simlink
        file:
          path: /etc/resolv.conf
          state: absent
      - name: create empty /etc/resolv.conf
        file:
          path: /etc/resolv.conf
          state: touch
  - name: install vdsm
    dnf: name=vdsm state=present
  - name: install vdsm-cli
    dnf: name=vdsm-cli state=present
  - name: disable vdsm ssl
    ini_file:
      dest: /etc/vdsm/vdsm.conf
      section: vars
      option: ssl
      value: false
      backup: yes
      create: false
    register: vdsm_ssl_result
  - name: disable qemu ssl
    ini_file:
      dest: /etc/libvirt/qemu.conf
      section: null
      option: spice_tls
      value: '0'
      backup: yes
      create: false
    register: qemu_ssl_result
  - name: 'disable libvirt ssl: listen_tcp = 1'
    ini_file:
      dest: /etc/libvirt/libvirtd.conf
      section: null
      option: listen_tcp
      value: '1'
      backup: yes
      create: false
    register: libvirt_ssl_result_1
  - name: 'disable libvirt ssl: auth_tcp = "none"'
    ini_file:
      dest: /etc/libvirt/libvirtd.conf
      section: null
      option: auth_tcp
      value: '"none"'
      backup: yes
      create: false
    register: libvirt_ssl_result_2
  - name: 'disable libvirt ssl: listen_tls = 0'
    ini_file:
      dest: /etc/libvirt/libvirtd.conf
      section: null
      option: listen_tls
      value: '0'
      backup: yes
      create: false
    register: libvirt_ssl_result_3
  - name: reconfigure vdsm
    command: vdsm-tool configure --force
    when: >
      vdsm_ssl_result.changed
      or qemu_ssl_result.changed
      or libvirt_ssl_result_1.changed
      or libvirt_ssl_result_2.changed
      or libvirt_ssl_result_3.changed
